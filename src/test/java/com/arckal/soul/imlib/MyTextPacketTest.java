package com.arckal.soul.imlib;

import com.arckal.soul.imlib.packets.MyTextPacket;
import com.arckal.soul.utils.DataUtils;
import org.junit.jupiter.api.Test;

import java.util.Collections;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;

/**
 * @Author: arckal
 * @Date: 2019/5/30 14:02
 * @Version 1.0
 */
public class MyTextPacketTest {

    @Test
    public void getData_1_1() {
        // "1" * 1
        MyTextPacket packet = new MyTextPacket("390970","29885200",String.join("", Collections.nCopies(1,"1")));
        packet.setMsgId(new String(DataUtils.hexStrToBytes("313535393635303130313330363232353934")));
        byte[] realData = DataUtils.hexStrToBytes("12123135353936353031303133303632323539342a1712063339303937301a08323938383532303032030a0131");
        DataUtils.printBytes(packet.getData());
        assertArrayEquals(packet.getData(),realData);
    }

    @Test
    public void getData_0_105() {
        // "0"*105
        MyTextPacket packet = new MyTextPacket("390970","29885200",String.join("", Collections.nCopies(105,"0")));
        packet.setMsgId(new String(DataUtils.hexStrToBytes("313535393635303131353631383536363831")));
        byte[] realData = DataUtils.hexStrToBytes("12123135353936353031313536313835363638312a7f12063339303937301a083239383835323030326b0a69303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030");
        DataUtils.printBytes(packet.getData());
        assertArrayEquals(packet.getData(),realData);
    }

    @Test
    public void getData_1_106() {
        // "1"*106
        MyTextPacket packet = new MyTextPacket("390970","29885200",String.join("", Collections.nCopies(106,"1")));
        packet.setMsgId(new String(DataUtils.hexStrToBytes("313535393635303134313230363432373830")));
        byte[] realData = DataUtils.hexStrToBytes("12123135353936353031343132303634323738302a800112063339303937301a083239383835323030326c0a6a31313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131");
        DataUtils.printBytes(packet.getData());
        assertArrayEquals(packet.getData(),realData);
    }

    @Test
    public void getData_2_125() {
        // "2"*125
        MyTextPacket packet = new MyTextPacket("390970","29885200",String.join("", Collections.nCopies(125,"2")));
        packet.setMsgId(new String(DataUtils.hexStrToBytes("313535393635303136373633363837323932")));
        byte[] realData = DataUtils.hexStrToBytes("12123135353936353031363736333638373239322a930112063339303937301a083239383835323030327f0a7d3232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232");
        DataUtils.printBytes(packet.getData());
        assertArrayEquals(packet.getData(),realData);
    }


    @Test
    public void getData_3_126() {
        // "3"*126
        MyTextPacket packet = new MyTextPacket("390970","29885200",String.join("", Collections.nCopies(126,"3")));
        packet.setMsgId(new String(DataUtils.hexStrToBytes("313535393635303138343633303139333531")));
        byte[] realData = DataUtils.hexStrToBytes("12123135353936353031383436333031393335312a950112063339303937301a0832393838353230303280010a7e333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333");
        DataUtils.printBytes(packet.getData());
        assertArrayEquals(packet.getData(),realData);
    }


    @Test
    public void getData_4_127() {
        // "4"*127
        MyTextPacket packet = new MyTextPacket("390970","29885200",String.join("", Collections.nCopies(127,"4")));
        packet.setMsgId(new String(DataUtils.hexStrToBytes("313535393635303230313430343733333332")));
        byte[] realData = DataUtils.hexStrToBytes("12123135353936353032303134303437333333322a960112063339303937301a0832393838353230303281010a7f34343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434");
        DataUtils.printBytes(packet.getData());
        assertArrayEquals(packet.getData(),realData);
    }

    @Test
    public void getData_9_512() {
        // "9"*512
        MyTextPacket packet = new MyTextPacket("390970","29885200",String.join("", Collections.nCopies(512,"9")));
        packet.setMsgId(new String(DataUtils.hexStrToBytes("313535393635303238393937393332343337")));
        byte[] realData = DataUtils.hexStrToBytes("12123135353936353032383939373933323433372a980412063339303937301a0832393838353230303283040a
        DataUtils.printBytes(packet.getData());
        assertArrayEquals(packet.getData(),realData);
    }

}